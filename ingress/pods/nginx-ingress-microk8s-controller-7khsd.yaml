apiVersion: v1
kind: Pod
metadata:
  annotations:
    cni.projectcalico.org/containerID: 5a78ff1f7c9c76113a49871c1cec1e10ffaa72d0e51df150c30bf80703a8e949
    cni.projectcalico.org/podIP: 10.1.104.101/32
    cni.projectcalico.org/podIPs: 10.1.104.101/32
  creationTimestamp: "2023-09-12T15:19:36Z"
  generateName: nginx-ingress-microk8s-controller-
  labels:
    controller-revision-hash: 5ccc44445c
    name: nginx-ingress-microk8s
    pod-template-generation: "1"
  name: nginx-ingress-microk8s-controller-7khsd
  namespace: ingress
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: nginx-ingress-microk8s-controller
    uid: fc41616a-0dac-41db-9c6e-143a44bf4054
  resourceVersion: "3119965"
  uid: c51df50c-654f-4e0a-bb86-945129f5cd3c
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - sve15136cn
  containers:
  - args:
    - /nginx-ingress-controller
    - --configmap=$(POD_NAMESPACE)/nginx-load-balancer-microk8s-conf
    - --tcp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-tcp-microk8s-conf
    - --udp-services-configmap=$(POD_NAMESPACE)/nginx-ingress-udp-microk8s-conf
    - --ingress-class=public
    - ' '
    - --publish-status-address=127.0.0.1
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: registry.k8s.io/ingress-nginx/controller:v1.8.0
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - /wait-shutdown
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    name: nginx-ingress-microk8s
    ports:
    - containerPort: 80
      hostPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      hostPort: 443
      name: https
      protocol: TCP
    - containerPort: 10254
      hostPort: 10254
      name: health
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      runAsUser: 101
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-cm48s
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: sve15136cn
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: nginx-ingress-microk8s-serviceaccount
  serviceAccountName: nginx-ingress-microk8s-serviceaccount
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/disk-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/memory-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/pid-pressure
    operator: Exists
  - effect: NoSchedule
    key: node.kubernetes.io/unschedulable
    operator: Exists
  volumes:
  - name: kube-api-access-cm48s
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2023-09-12T15:19:36Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2023-09-27T18:41:35Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2023-09-27T18:41:35Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2023-09-12T15:19:36Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://f2ee8fe31fbf46bbfb6f990793cea6f0407611adbad0e59b635b49cdbf82a84e
    image: registry.k8s.io/ingress-nginx/controller:v1.8.0
    imageID: registry.k8s.io/ingress-nginx/controller@sha256:744ae2afd433a395eeb13dc03d3313facba92e96ad71d9feaafc85925493fee3
    lastState:
      terminated:
        containerID: containerd://f498e18c518f6ab363bbfb35bea3d68191e0f5b92aba671adc4f3760cb45a034
        exitCode: 255
        finishedAt: "2023-09-27T18:39:15Z"
        reason: Unknown
        startedAt: "2023-09-27T05:37:29Z"
    name: nginx-ingress-microk8s
    ready: true
    restartCount: 24
    started: true
    state:
      running:
        startedAt: "2023-09-27T18:41:12Z"
  hostIP: 192.168.1.9
  phase: Running
  podIP: 10.1.104.101
  podIPs:
  - ip: 10.1.104.101
  qosClass: BestEffort
  startTime: "2023-09-12T15:19:36Z"
